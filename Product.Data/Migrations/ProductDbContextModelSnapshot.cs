// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Product.Data.Context;

#nullable disable

namespace Product.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Capstone.Product.Common.Model.ProductDetails", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "Television of Brand A",
                            DiscountPercentage = 30,
                            IsAvailable = true,
                            Name = "Television",
                            Price = 20000m,
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 1,
                            Description = "Refrigerator of Brand A",
                            DiscountPercentage = 30,
                            IsAvailable = true,
                            Name = "Refrigerator",
                            Price = 50000m,
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 2,
                            Description = "Sneakers of Brand C",
                            DiscountPercentage = 20,
                            IsAvailable = true,
                            Name = "Sneakers",
                            Price = 5000m,
                            StockQuantity = 150
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 2,
                            Description = "Sports Shoes of Brand C",
                            DiscountPercentage = 30,
                            IsAvailable = true,
                            Name = "Sports Shoes",
                            Price = 6000m,
                            StockQuantity = 150
                        });
                });

            modelBuilder.Entity("Product.Common.Model.CategoryDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Electronic Items",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Fashion Products",
                            Name = "Fashion"
                        });
                });

            modelBuilder.Entity("Capstone.Product.Common.Model.ProductDetails", b =>
                {
                    b.HasOne("Product.Common.Model.CategoryDetails", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Product.Common.Model.CategoryDetails", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
