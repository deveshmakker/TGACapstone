// <auto-generated />
using System;
using Customer.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Customer.Data.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    partial class CustomerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Customer.Common.Model.AddressDetails", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AddressId"));

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressLine2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AddressLine3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pincode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine1 = "House No 1",
                            AddressLine2 = "Sector 1",
                            AddressLine3 = "",
                            City = "City A",
                            Country = "Country A",
                            CustomerId = 1,
                            Phone = "1234321",
                            Pincode = "121212",
                            State = "State 1"
                        },
                        new
                        {
                            AddressId = 2,
                            AddressLine1 = "House No 2",
                            AddressLine2 = "Sector 2",
                            AddressLine3 = "",
                            City = "City B",
                            Country = "Country A",
                            CustomerId = 1,
                            Phone = "1234321",
                            Pincode = "434343",
                            State = "State 1"
                        },
                        new
                        {
                            AddressId = 3,
                            AddressLine1 = "House No 12",
                            AddressLine2 = "Sector 12",
                            AddressLine3 = "",
                            City = "City C",
                            Country = "Country A",
                            CustomerId = 2,
                            Phone = "7846532",
                            Pincode = "121212",
                            State = "State 2"
                        });
                });

            modelBuilder.Entity("Customer.Common.Model.CustomerDetails", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            DateOfBirth = new DateTime(2001, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer1@firstmail.com",
                            FirstName = "Number",
                            IsActive = true,
                            LastName = "One",
                            Password = "Password@1",
                            PhoneNumber = "1234321"
                        },
                        new
                        {
                            CustomerId = 2,
                            DateOfBirth = new DateTime(2002, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "customer2@secondmail.com",
                            FirstName = "Number",
                            IsActive = true,
                            LastName = "Two",
                            Password = "Password@2",
                            PhoneNumber = "7846532 "
                        });
                });

            modelBuilder.Entity("Customer.Common.Model.AddressDetails", b =>
                {
                    b.HasOne("Customer.Common.Model.CustomerDetails", "customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("customer");
                });

            modelBuilder.Entity("Customer.Common.Model.CustomerDetails", b =>
                {
                    b.Navigation("Addresses");
                });
#pragma warning restore 612, 618
        }
    }
}
