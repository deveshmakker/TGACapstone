// <auto-generated />
using Cart.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cart.Data.Migrations
{
    [DbContext(typeof(CartDbContext))]
    [Migration("20250404152542_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Cart.Common.Model.CartContentDetails", b =>
                {
                    b.Property<int>("CartContentDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartContentDetailsId"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("int");

                    b.Property<decimal>("PricePerItem")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartContentDetailsId");

                    b.HasIndex("CartId");

                    b.ToTable("CartContentDetails");

                    b.HasData(
                        new
                        {
                            CartContentDetailsId = 1,
                            CartId = 1,
                            DiscountPercentage = 30,
                            PricePerItem = 20000m,
                            ProductId = 1,
                            Quantity = 1
                        },
                        new
                        {
                            CartContentDetailsId = 2,
                            CartId = 2,
                            DiscountPercentage = 20,
                            PricePerItem = 5000m,
                            ProductId = 3,
                            Quantity = 1
                        },
                        new
                        {
                            CartContentDetailsId = 3,
                            CartId = 2,
                            DiscountPercentage = 30,
                            PricePerItem = 6000m,
                            ProductId = 4,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Cart.Common.Model.CartDetails", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.HasKey("CartId");

                    b.ToTable("CartDetails");

                    b.HasData(
                        new
                        {
                            CartId = 1,
                            CustomerId = 1
                        },
                        new
                        {
                            CartId = 2,
                            CustomerId = 2
                        });
                });

            modelBuilder.Entity("Cart.Common.Model.CartContentDetails", b =>
                {
                    b.HasOne("Cart.Common.Model.CartDetails", "Cart")
                        .WithMany("cartContents")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Cart.Common.Model.CartDetails", b =>
                {
                    b.Navigation("cartContents");
                });
#pragma warning restore 612, 618
        }
    }
}
